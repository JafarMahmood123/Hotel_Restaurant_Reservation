// <auto-generated />
using System;
using Hotel_Restaurant_Reservation.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotel_Restaurant_Reservation.Infrastructure.Migrations
{
    [DbContext(typeof(HotelRestaurantDbContext))]
    partial class HotelRestaurantDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CuisineRestaurant", b =>
                {
                    b.Property<Guid>("CuisinesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RestaurantsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CuisinesId", "RestaurantsId");

                    b.HasIndex("RestaurantsId");

                    b.ToTable("CuisineRestaurant");
                });

            modelBuilder.Entity("CurrencyTypeHotel", b =>
                {
                    b.Property<Guid>("CurrencyTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HotelsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CurrencyTypeId", "HotelsId");

                    b.HasIndex("HotelsId");

                    b.ToTable("CurrencyTypeHotel");
                });

            modelBuilder.Entity("DishRestaurant", b =>
                {
                    b.Property<Guid>("DishesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RestaurantsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DishesId", "RestaurantsId");

                    b.HasIndex("RestaurantsId");

                    b.ToTable("DishRestaurant");
                });

            modelBuilder.Entity("FeatureRestaurant", b =>
                {
                    b.Property<Guid>("FeaturesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RestaurantsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FeaturesId", "RestaurantsId");

                    b.HasIndex("RestaurantsId");

                    b.ToTable("FeatureRestaurant");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.Cuisine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Cuisine");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.CurrencyType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("CurrencyTypes");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Preferences")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RestaurantOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantOrderId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.Dish", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Dish");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CurrencyTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxNumberOfRegesters")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PayToEnter")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartingDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyTypeId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.Feature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Feature");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CurrencyTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HotelRangePricesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HotelReservationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfRooms")
                        .HasColumnType("int");

                    b.Property<Guid>("PropertyTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReviewId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("StarRate")
                        .HasColumnType("float");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelRangePricesId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PropertyTypeId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.HotelRangePrices", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("MaxPrice")
                        .HasColumnType("float");

                    b.Property<double>("MinPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("HotelRangePrices");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.HotelReservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ReceiveDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("ReservationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomId");

                    b.ToTable("HotelReservations");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.LocalLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LocalLocations");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LocalLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("LocalLocationId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.MealType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("MealType");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.PriceLevel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("PriceLevel");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.PropertyType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PropertyTypes");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.Restaurant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CuisineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DishId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<Guid>("MealTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PriceLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RangePricesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("StarRating")
                        .HasColumnType("float");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("WorkTimeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Restaurant");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.RestaurantOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BookingDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReceiveDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RestaurantOrder");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.RestaurantRangePrices", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("MaxPrice")
                        .HasColumnType("float");

                    b.Property<double>("MinPrice")
                        .HasColumnType("float");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RestaurantRangePrices");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("HotelId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HotelReservationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaxOccupancy")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid?>("RoomAmenityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoomTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomAmenityId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.RoomAmenity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RoomAmenities");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.RoomType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.WorkTime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly>("CloseHour")
                        .HasColumnType("time");

                    b.Property<int>("DayEnum")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("OpenHour")
                        .HasColumnType("time");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("WorkTime");
                });

            modelBuilder.Entity("MealTypeRestaurant", b =>
                {
                    b.Property<Guid>("MealTypesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RestaurantsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MealTypesId", "RestaurantsId");

                    b.HasIndex("RestaurantsId");

                    b.ToTable("MealTypeRestaurant");
                });

            modelBuilder.Entity("PriceLevelRestaurant", b =>
                {
                    b.Property<Guid>("PriceLevelsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RestaurantsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PriceLevelsId", "RestaurantsId");

                    b.HasIndex("RestaurantsId");

                    b.ToTable("PriceLevelRestaurant");
                });

            modelBuilder.Entity("RestaurantRestaurantOrder", b =>
                {
                    b.Property<Guid>("RestaurantOrdersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RestaurantsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RestaurantOrdersId", "RestaurantsId");

                    b.HasIndex("RestaurantsId");

                    b.ToTable("RestaurantRestaurantOrder");
                });

            modelBuilder.Entity("RestaurantRestaurantRangePrices", b =>
                {
                    b.Property<Guid>("RangePricesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RestaurantsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RangePricesId", "RestaurantsId");

                    b.HasIndex("RestaurantsId");

                    b.ToTable("RestaurantRestaurantRangePrices");
                });

            modelBuilder.Entity("RestaurantTag", b =>
                {
                    b.Property<Guid>("RestaurantsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RestaurantsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("RestaurantTag");
                });

            modelBuilder.Entity("RestaurantWorkTime", b =>
                {
                    b.Property<Guid>("RestaurantsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkTimesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RestaurantsId", "WorkTimesId");

                    b.HasIndex("WorkTimesId");

                    b.ToTable("RestaurantWorkTime");
                });

            modelBuilder.Entity("CuisineRestaurant", b =>
                {
                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Cuisine", null)
                        .WithMany()
                        .HasForeignKey("CuisinesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Restaurant", null)
                        .WithMany()
                        .HasForeignKey("RestaurantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CurrencyTypeHotel", b =>
                {
                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.CurrencyType", null)
                        .WithMany()
                        .HasForeignKey("CurrencyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Hotel", null)
                        .WithMany()
                        .HasForeignKey("HotelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DishRestaurant", b =>
                {
                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Dish", null)
                        .WithMany()
                        .HasForeignKey("DishesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Restaurant", null)
                        .WithMany()
                        .HasForeignKey("RestaurantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FeatureRestaurant", b =>
                {
                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Feature", null)
                        .WithMany()
                        .HasForeignKey("FeaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Restaurant", null)
                        .WithMany()
                        .HasForeignKey("RestaurantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.Customer", b =>
                {
                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.RestaurantOrder", null)
                        .WithMany("Customers")
                        .HasForeignKey("RestaurantOrderId");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.Event", b =>
                {
                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.CurrencyType", null)
                        .WithMany("Events")
                        .HasForeignKey("CurrencyTypeId");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.Hotel", b =>
                {
                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.HotelRangePrices", "HotelRangePrices")
                        .WithMany("Hotels")
                        .HasForeignKey("HotelRangePricesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.PropertyType", "PropertyType")
                        .WithMany("Hotels")
                        .HasForeignKey("PropertyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HotelRangePrices");

                    b.Navigation("Location");

                    b.Navigation("PropertyType");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.HotelReservation", b =>
                {
                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Hotel", "Hotel")
                        .WithMany("HotelReservations")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Room", "Room")
                        .WithMany("HotelReservations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Hotel");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.Location", b =>
                {
                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.City", "City")
                        .WithMany("Locations")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Country", "Country")
                        .WithMany("Locations")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.LocalLocation", "LocalLocation")
                        .WithMany("Locations")
                        .HasForeignKey("LocalLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("LocalLocation");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.Review", b =>
                {
                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Hotel", "Hotel")
                        .WithMany("Reviews")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Hotel");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.Room", b =>
                {
                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.RoomAmenity", null)
                        .WithMany("Rooms")
                        .HasForeignKey("RoomAmenityId");

                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.RoomType", null)
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("MealTypeRestaurant", b =>
                {
                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.MealType", null)
                        .WithMany()
                        .HasForeignKey("MealTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Restaurant", null)
                        .WithMany()
                        .HasForeignKey("RestaurantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PriceLevelRestaurant", b =>
                {
                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.PriceLevel", null)
                        .WithMany()
                        .HasForeignKey("PriceLevelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Restaurant", null)
                        .WithMany()
                        .HasForeignKey("RestaurantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RestaurantRestaurantOrder", b =>
                {
                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.RestaurantOrder", null)
                        .WithMany()
                        .HasForeignKey("RestaurantOrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Restaurant", null)
                        .WithMany()
                        .HasForeignKey("RestaurantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RestaurantRestaurantRangePrices", b =>
                {
                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.RestaurantRangePrices", null)
                        .WithMany()
                        .HasForeignKey("RangePricesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Restaurant", null)
                        .WithMany()
                        .HasForeignKey("RestaurantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RestaurantTag", b =>
                {
                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Restaurant", null)
                        .WithMany()
                        .HasForeignKey("RestaurantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RestaurantWorkTime", b =>
                {
                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.Restaurant", null)
                        .WithMany()
                        .HasForeignKey("RestaurantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_Restaurant_Reservation.Domain.Entities.WorkTime", null)
                        .WithMany()
                        .HasForeignKey("WorkTimesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.City", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.Country", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.CurrencyType", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.Hotel", b =>
                {
                    b.Navigation("HotelReservations");

                    b.Navigation("Reviews");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.HotelRangePrices", b =>
                {
                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.LocalLocation", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.PropertyType", b =>
                {
                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.RestaurantOrder", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.Room", b =>
                {
                    b.Navigation("HotelReservations");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.RoomAmenity", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Hotel_Restaurant_Reservation.Domain.Entities.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
